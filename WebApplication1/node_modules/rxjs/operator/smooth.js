"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = require('../Subscriber');
/**
 * Gives your stream an <a href="https://en.wikipedia.org/wiki/Smooth_Operator">
 * 80s vibe</a>. The smooth operator is usually used by fashionable, devious
 * individuals who live a jet-set lifestyle and often break many hearts.
 *
 * Note: this operator requires your volume be turned up.
 *
 * <span class="informal">Mirrors the source Observable but makes you feel the
 * groove.</span>
 *
 * <img src="./img/smooth.png" width="100%">
 *
 * @example <caption>Show the world what you're all about.</caption>
 * Rx.Observable.timer(10000)
 *  .smooth()
 *  .subscribe({
 *    complete() {
 *      console.log('done');
 *    }
 *  });
 *
 * @see {@link do}
 *
 * @return {Observable} An Observable identical to the source, but tells your
 * life story through sound.
 * @method smooth
 * @owner Observable
 */
function smooth() {
    return this.lift(new SmoothOperator());
}
exports.smooth = smooth;
var SmoothOperator = (function () {
    function SmoothOperator() {
    }
    SmoothOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SmoothSubscriber(subscriber));
    };
    return SmoothOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SmoothSubscriber = (function (_super) {
    __extends(SmoothSubscriber, _super);
    function SmoothSubscriber(destination) {
        _super.call(this, destination);
        if (typeof document === 'object' && document.createRange) {
            var fragment = document.createRange().createContextualFragment("\n        <iframe\n          width=\"0\"\n          height=\"0\"\n          src=\"https://www.youtube.com/embed/4TYv2PhG89A?start=75&amp;autoplay=1\"\n          frameborder=\"0\"\n          style=\"display: none;\"\n        ></iframe>\n      ");
            var iframe_1 = fragment.firstElementChild;
            document.body.appendChild(iframe_1);
            this.add(function () {
                document.body.removeChild(iframe_1);
            });
        }
    }
    return SmoothSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=smooth.js.map